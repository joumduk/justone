const
    ion = import '../'
    BlockStatement = import './BlockStatement'
    DynamicExpression = import './DynamicExpression'
    noop = ->

let count = 0

export class Template extends BlockStatement
    constructor: ->
        super
        @context.returnExpression = new DynamicExpression()
    properties:
        # Template also implements Expression interface
        observe: (watcher = noop) ->
            if not @isActive
                @activate()
            let unobserve = @context.returnExpression.observe(watcher)
            return =>
                unobserve()
                if not @context.returnExpression.isActive
                    @deactivate()
        activate: ->
            super
            count++
            # if @id?
            #     console.log('++ activate template ' + count + ", observers: " + ion.observe.count)
        deactivate: ->
            super
            count--
            # if @id?
            #     console.log('-- deactivate template ' + count + ", observers: " + ion.observe.count)
        toString: -> @id? ? "Template {{@id.name}}" : "Template"

        # TODO: Always use new on templates that should be disposed???
        # expressions what are called on templates are not being removed some how.  Figure it out.
