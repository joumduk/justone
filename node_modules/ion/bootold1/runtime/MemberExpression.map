{"version":3,"sources":["MemberExpression.ion"],"names":["ion","DynamicExpression","Factory","MemberExpression","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true,"source":"ion/runtime/MemberExpression.ion"},"end":{"line":7,"column":16,"fixed":true,"source":"ion/runtime/MemberExpression.ion"}}},"objectExpression","context","createRuntime","object","propertyExpression","computed","property","name","watchValue","objectWatcher","objectValue","updateValue","propertyWatcher","propertyValue","deactivate","unwatchValue","value","setValue","observedObject","observedProperty","objectObserver","observe","changes","setMemberValue","test"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,E,IAEI,G,OAA8B,CAAO,IAAP,CAFlC;IAEKC,iB,QAAAA,iB,CAFL;IAEuBC,O,QAAAA,O,CAFvB;IAIaC,gB;;QACTC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,iCADQD,Q,uBACI,CAAZ;AAAA,gBACY,KAACE,gBAAD,QAACA,gB,WAAD,KAACA,gB,GAAoB,KAACC,OAAD,CAASC,aAAT,CAAuB,KAACC,MAAxB,CAArB,CADZ;AAAA,gBAEY,KAACC,kBAAD,QAACA,kB,WAAD,KAACA,kB,GAAsB,KAACH,OAAD,CAASC,aAAT,CAAuB,KAACG,QAAD,GAAY,KAACC,QAAb,GAAwB,KAACA,QAAD,CAAUC,IAAzD,CAAvB,CAFZ;AAAA,gBAIY,KAACP,gBAAD,CAAkBQ,UAAlB,CACI,KAACC,aAAD,QAACA,a,WAAD,KAACA,a,YAAiB,UAACC,WAAD,EAClC;AAAA,oBAAoB,KAACA,WAAD,GAAeA,WAAf,CAApB;AAAA,oBACoB,KAACC,WAAD,GADpB;AAAA,iB,OAFY,EAJZ;AAAA,gBAUY,KAACP,kBAAD,CAAoBI,UAApB,CACI,KAACI,eAAD,QAACA,e,WAAD,KAACA,e,YAAmB,UAACC,aAAD,EACpC;AAAA,oBAAoB,KAACA,aAAD,GAAiBA,aAAjB,CAApB;AAAA,oBACoB,KAACF,WAAD,GADpB;AAAA,iB,OAFY,EAVZ;AAAA,aAFe;AAAA,YAiBPG,UAAA,EAAYf,YACpB;AAAA,gB,iCADQe,U,uBACI,CAAZ;AAAA,gBACY,KAACd,gBAAD,CAAkBe,YAAlB,CAA+B,KAACN,aAAhC,EADZ;AAAA,gBAEY,KAACL,kBAAD,CAAoBW,YAApB,CAAiC,KAACH,eAAlC,EAFZ;AAAA,aAlBe;AAAA,YAqBPD,WAAA,EAAaZ,YACrB;AAAA,gBAAY,IAAIiB,KAAA,GAAQ,MAAZ,CAAZ;AAAA,gBACY,IAAG,KAACN,W,QAAJ,EACZ;AAAA,oBAAgB,IAAG,KAACG,a,QAAJ,EAChB;AAAA,wBAAoBG,KAAA,GAAQ,KAACN,WAAD,CAAa,KAACG,aAAd,CAAR,CAApB;AAAA,qBADA;AAAA,iBAFA;AAAA,gBAOY,KAACI,QAAD,CAAUD,KAAV,EAPZ;AAAA,gBAUY,IAAG,KAACE,cAAD,KAAqB,KAACR,WAAtB,IAAqC,KAACS,gBAAD,KAAuB,KAACN,aAAhE,EACZ;AAAA,oBAAgB,KAACK,cAAD,GAAkB,KAACR,WAAnB,CAAhB;AAAA,oBACgB,KAACS,gBAAD,GAAoB,KAACN,aAArB,CADhB;AAAA,oBAEgB,KAACO,c,WAAD,KAACA,cAAD,E,SAAA,CAFhB;AAAA,oBAGgB,IAAG,KAACV,W,QAAJ,EAChB;AAAA,wBAAoB,KAACU,cAAD,GAAkB3B,GAAA,CAAI4B,OAAJ,CACd,KAACX,WADa,E,SAEd,UAACY,OAAD,EACxB;AAAA,4BAA4B,KAACX,WAAD,GAA5B;AAAA,yB,OAHsC,EAId,KAACE,aAJa,CAAlB,CAApB;AAAA,qBAJA;AAAA,iBAXA;AAAA,aAtBe;AAAA,YA6CPU,cAAA,EAAgBxB,UAACiB,KAADjB,EAExB;AAAA,gBAAY,IAAG,KAACW,W,QAAD,IAAkB,KAACG,a,QAAtB,EACZ;AAAA,oBAAgB,KAACH,WAAD,CAAa,KAACG,aAAd,IAA+BG,KAA/B,CAAhB;AAAA,iBADA;AAAA,aA/Ce;AAAA,S;QAiDXQ,IAAA,EAAMzB,Y;;OAlD4BL,iB,EAJtC;2BAIaE,gB","sourcesContent":["const\n    ion = import '../'\n    {DynamicExpression,Factory} = import './'\n\nexport class MemberExpression extends DynamicExpression\n    properties:\n        activate: ->\n            super\n            @objectExpression ?= @context.createRuntime(@object)\n            @propertyExpression ?= @context.createRuntime(@computed ? @property : @property.name)\n\n            @objectExpression.watchValue(\n                @objectWatcher ?= (objectValue) =>\n                    @objectValue = objectValue\n                    @updateValue()\n            )\n\n            @propertyExpression.watchValue(\n                @propertyWatcher ?= (propertyValue) =>\n                    @propertyValue = propertyValue\n                    @updateValue()\n            )\n        deactivate: ->\n            super\n            @objectExpression.unwatchValue(@objectWatcher)\n            @propertyExpression.unwatchValue(@propertyWatcher)\n        updateValue: ->\n            let value = undefined\n            if @objectValue?\n                if @propertyValue?\n                    value = @objectValue[@propertyValue]\n            # else if @isActive and not @existential and @loc?.start?.source? and @hasOwnProperty('objectValue') and @hasOwnProperty('propertyValue')\n            #     # we need to throw an exception here with location info\n            #     console.warn(\"Cannot read {{Factory.toCode(@property)}} property of {{@objectValue}} ({{Factory.toCode(@object)}}) ({{@loc.start.source}}:{{@loc.start.line}}:{{@loc.start.column + 1}})\")\n            @setValue(value)\n\n            # also observe the objectValue for changes\n            if @observedObject isnt @objectValue or @observedProperty isnt @propertyValue\n                @observedObject = @objectValue\n                @observedProperty = @propertyValue\n                @objectObserver?()\n                if @objectValue?\n                    @objectObserver = ion.observe(\n                        @objectValue\n                        (changes) =>\n                            @updateValue()\n                        @propertyValue\n                    )\n\n        # sets the underlying property value.  This may be used for two way binding.\n        setMemberValue: (value) ->\n            # console.log('setMemberValue BITCHES!', @objectValue, @propertyValue, value)\n            if @objectValue? and @propertyValue?\n                @objectValue[@propertyValue] = value\n    test: ->\n"]}