{"version":3,"sources":["ConditionalExpression.ion"],"names":["ion","DynamicExpression","ConditionalExpression","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":8,"column":8,"fixed":true,"source":"ion/runtime/ConditionalExpression.ion"},"end":{"line":8,"column":16,"fixed":true,"source":"ion/runtime/ConditionalExpression.ion"}}},"testExpression","context","createRuntime","test","watchValue","testWatcher","value","hasOwnProperty","Boolean","testValue","alternateExpression","unwatchValue","alternateWatcher","consequentExpression","consequent","consequentWatcher","setValue","alternate","deactivate","module","exports"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,EAEIC,iBAAA,G,OAAoB,CAAO,qBAAP,CAFxB;IAIuBC,qB;;QAEnBC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,sCADQD,Q,uBACI,CAAZ;AAAA,gBACY,KAACE,cAAD,QAACA,c,WAAD,KAACA,c,GAAkB,KAACC,OAAD,CAASC,aAAT,CAAuB,KAACC,IAAxB,CAAnB,CADZ;AAAA,gBAEY,KAACH,cAAD,CAAgBI,UAAhB,CACI,KAACC,WAAD,QAACA,W,WAAD,KAACA,W,YAAe,UAACC,KAAD,EAChC;AAAA,oBAAoB,IAAG,CAAI,KAACC,cAAD,CAAgB,WAAhB,CAAJ,IAAoCC,OAAA,CAAQF,KAAR,MAAoBE,OAAA,CAAQ,KAACC,SAAT,CAA3D,EACpB;AAAA,wBAAwB,KAACA,SAAD,GAAaH,KAAb,CAAxB;AAAA,wBACwB,IAAGA,KAAH,EACxB;AAAA,4BAA4B,KAACI,mB,WAAD,KAACA,mBAAD,CAAsBC,YAAtB,CAAmC,KAACC,gBAApC,C,SAAA,CAA5B;AAAA,4BAC4B,KAACF,mBAAD,GAAuB,IAAvB,CAD5B;AAAA,4BAE4B,KAACG,oBAAD,QAACA,oB,WAAD,KAACA,oB,GAAwB,KAACZ,OAAD,CAASC,aAAT,CAAuB,KAACY,UAAxB,CAAzB,CAF5B;AAAA,4BAG4B,KAACD,oBAAD,CAAsBT,UAAtB,CACI,KAACW,iBAAD,QAACA,iB,WAAD,KAACA,iB,YAAqB,UAACT,KAAD,EACtD;AAAA,gCAAoC,IAAG,KAACG,SAAJ,EACpC;AAAA,oCAAwC,KAACO,QAAD,CAAUV,KAAV,EAAxC;AAAA,iCADA;AAAA,6B,OAF4B,EAH5B;AAAA,yBADwB,MAUxB;AAAA,4BAA4B,KAACO,oB,WAAD,KAACA,oBAAD,CAAuBF,YAAvB,CAAoC,KAACI,iBAArC,C,SAAA,CAA5B;AAAA,4BAC4B,KAACF,oBAAD,GAAwB,IAAxB,CAD5B;AAAA,4BAE4B,KAACH,mBAAD,QAACA,mB,WAAD,KAACA,mB,GAAuB,KAACT,OAAD,CAASC,aAAT,CAAuB,KAACe,SAAxB,CAAxB,CAF5B;AAAA,4BAG4B,KAACP,mBAAD,CAAqBN,UAArB,CACI,KAACQ,gBAAD,QAACA,gB,WAAD,KAACA,gB,YAAoB,UAACN,KAAD,EACrD;AAAA,gCAAoC,IAAG,CAAI,KAACG,SAAR,EACpC;AAAA,oCAAwC,KAACO,QAAD,CAAUV,KAAV,EAAxC;AAAA,iCADA;AAAA,6B,OAF4B,EAH5B;AAAA,yBAXA;AAAA,qBADA;AAAA,iB,OAFY,EAFZ;AAAA,aAFe;AAAA,YA2BPY,UAAA,EAAYnB,YACpB;AAAA,gB,sCADQmB,U,uBACI,CAAZ;AAAA,gBACY,KAAClB,cAAD,CAAgBW,YAAhB,CAA6B,KAACN,WAA9B,EADZ;AAAA,gBAEY,KAACQ,oB,WAAD,KAACA,oBAAD,CAAuBF,YAAvB,CAAoC,KAACI,iBAArC,C,SAAA,CAFZ;AAAA,gBAGY,KAACL,mB,WAAD,KAACA,mBAAD,CAAsBC,YAAtB,CAAmC,KAACC,gBAApC,C,SAAA,CAHZ;AAAA,aA5Be;AAAA,S;OAFsCjB,iB,EAJrD;AAIAwB,MAAA,CAAOC,OAAP,GAAuBxB,qBAAvB","sourcesContent":["const\n    ion = import '../'\n    DynamicExpression = import './DynamicExpression'\n\nmodule.exports = class ConditionalExpression extends DynamicExpression\n    # [@test, @consequent, @alternate]\n    properties:\n        activate: ->\n            super\n            @testExpression ?= @context.createRuntime(@test)\n            @testExpression.watchValue(\n                @testWatcher ?= (value) =>\n                    if not @hasOwnProperty('testValue') or Boolean(value) isnt Boolean(@testValue)\n                        @testValue = value\n                        if value\n                            @alternateExpression?.unwatchValue(@alternateWatcher)\n                            @alternateExpression = null\n                            @consequentExpression ?= @context.createRuntime(@consequent)\n                            @consequentExpression.watchValue(\n                                @consequentWatcher ?= (value) =>\n                                    if @testValue\n                                        @setValue(value)\n                            )\n                        else\n                            @consequentExpression?.unwatchValue(@consequentWatcher)\n                            @consequentExpression = null\n                            @alternateExpression ?= @context.createRuntime(@alternate)\n                            @alternateExpression.watchValue(\n                                @alternateWatcher ?= (value) =>\n                                    if not @testValue\n                                        @setValue(value)\n                            )\n            )\n        deactivate: ->\n            super\n            @testExpression.unwatchValue(@testWatcher)\n            @consequentExpression?.unwatchValue(@consequentWatcher)\n            @alternateExpression?.unwatchValue(@alternateWatcher)\n"]}