{"version":3,"sources":["CallExpression.ion"],"names":["ion","DynamicExpression","ArrayExpression","Factory","args","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":8,"column":8,"fixed":true,"source":"ion/runtime/CallExpression.ion"},"end":{"line":8,"column":16,"fixed":true,"source":"ion/runtime/CallExpression.ion"}}},"calleeExpression","context","createRuntime","callee","watchValue","calleeWatcher","value","isActive","existential","loc","start","source","console","warn","toCode","line","column","calleeValue","thisArg","objectExpression","unobserve","thisarg","thisObserver","unwatch","template","deep","Array","isArray","patch","watch","evaluate","observe","argumentExpressions","type","elements","arguments","observeElements","argumentWatcher","argumentsValue","deactivate","unwatchValue","templateWatcher","_evaluateInternal","apply","setValue","bind","create","DEBUG","e","error","stack","CallExpression","properties","module","exports"],"mappings":"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","sourcesContent":["const\n    ion = import '../'\n    {DynamicExpression,ArrayExpression,Factory} = import './'\n\nmodule.exports = class CallExpression extends DynamicExpression\n    properties:\n        args: null\n        activate: ->\n            super\n            @calleeExpression ?= @context.createRuntime(@callee)\n            @calleeExpression.watchValue(\n                @calleeWatcher ?= (value) =>\n                    if @isActive and not value? and not @existential and @loc?.start.source?\n                        # we need to throw an exception here with location info\n                        console.warn(\"Function is {{value}} ({{Factory.toCode(@callee)}}) ({{@loc.start.source}}:{{@loc.start.line}}:{{@loc.start.column + 1}})\")\n\n                    @calleeValue = value\n                    # get thisArg and watchValue for changes\n                    let thisArg = @calleeExpression.objectExpression?.value\n                    if thisArg isnt @thisArg\n                        ion.unobserve(@thisarg, @thisObserver)\n                        @unwatch?()\n                        @thisArg = thisArg\n                        if not @calleeValue?.template # we don't need to watchValue the thisArg if the callee is a template\n                            let deep = Array.isArray(thisArg)\n                            if deep\n                                # console.log('deep watchValue man-------------------------', thisArg, @calleeValue)\n                                # deep watchValue\n                                @unwatch = ion.patch.watch(\n                                    thisArg\n                                    @thisObserver ?= (patch) =>\n                                        # console.log('deep change', patch)\n                                        @evaluate()\n                                )\n                            else\n                                # shallow observe\n                                ion.observe(\n                                    thisArg\n                                    @thisObserver ?= =>\n                                        @evaluate()\n                                )\n                    @evaluate()\n            )\n            @argumentExpressions ?= @context.createRuntime({type:'ArrayExpression',elements:@arguments, observeElements:not @calleeValue?.template})\n            @argumentExpressions.watchValue(\n                @argumentWatcher ?= (value) =>\n                    @argumentsValue = value\n                    @evaluate()\n            )\n        deactivate: ->\n            super\n            @calleeExpression.unwatchValue(@calleeWatcher)\n            @argumentExpressions.unwatchValue(@argumentWatcher)\n            if @template?\n                @template.unwatchValue(@templateWatcher)\n                delete @template\n        _evaluateInternal: ->\n            if not (@isActive and @calleeValue? and @argumentsValue?)\n                return\n            let value = undefined\n            if @calleeValue.template\n                if @template?\n                    @template.unwatchValue(@templateWatcher)\n                # always use new on templates\n                @template = @calleeValue.apply(@thisArg, @argumentsValue)\n                @template.watchValue(@templateWatcher ?= @setValue.bind(@))\n            else\n                if @type is 'NewExpression'\n                    # create a new with variable args\n                    value = ion.create(@calleeValue, @argumentsValue)\n                else # @type is 'CallExpression'\n                    value = @calleeValue.apply(@thisArg, @argumentsValue)\n                @setValue(value)\n        if DEBUG\n            evaluate: ->\n                try\n                    @_evaluateInternal()\n                catch e\n                    # if we don't catch the errors, they might not be logged when occuring in an Object.observe callback\n                    console.error(e.stack ? e)\n        else\n            evaluate: -> @_evaluateInternal()\n"]}