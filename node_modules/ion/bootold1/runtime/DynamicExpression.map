{"version":3,"sources":["DynamicExpression.ion"],"names":["ion","DynamicExpression","properties","isActive","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":6,"column":8,"fixed":true,"source":"ion/runtime/DynamicExpression.ion"},"end":{"line":6,"column":16,"fixed":true,"source":"ion/runtime/DynamicExpression.ion"}}},"deactivate","watchValue","watcher","watchers","_watchers","length","push","hasValue","value","getValue","_notifyWatcher","unwatchValue","remove","call","notify","hasOwnProperty","setValue","test","d","total"],"mappings":"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","sourcesContent":["const ion = import '../'\n\nexport class DynamicExpression extends import './Expression'\n    properties:\n        isActive: false\n        activate: ->\n            # called when we have watchers\n            @isActive = true\n        deactivate: ->\n            # called when we no longer have watchers\n            @isActive = false\n        watchValue: (watcher) ->\n            let watchers = @_watchers ?= []\n            if watchers.length is 0\n                @activate()\n            watchers.push(watcher)\n            # notify watcher immediately if we have a value\n            if @hasValue()\n                let value = @getValue()\n                @_notifyWatcher(watcher, value)\n        unwatchValue: (watcher) ->\n            @_watchers.remove(watcher)\n            # notify watcher immediately if we have a value\n            if @hasValue()\n                @_notifyWatcher(watcher, undefined)\n            # this must happen AFTER we notify the watcher,\n            # otherwise it changes the value and the watcher may not be notified.\n            if @_watchers.length is 0\n                @deactivate()\n        _notifyWatcher: (watcher, value) -> watcher.call(@, value)\n        notify: ->\n            if @_watchers?\n                let value = @getValue()\n                for watcher in @_watchers\n                    @_notifyWatcher(watcher, value)\n            return\n        hasValue: -> @hasOwnProperty('value')\n        getValue: -> @value\n        setValue: (value) ->\n            if value isnt @value or not @hasValue()\n                @value = value\n                @notify()\n            return\n    test: ->\n        const d = new DynamicExpression()\n        if d.getValue() isnt undefined\n            throw \"d.getValue() != undefined\"\n        let total = 10\n        const watcher = (value) ->\n            if value isnt undefined\n                total += value\n        d.watchValue(watcher)\n        assert total is 10\n        d.setValue(10)\n        assert d.getValue() is 10\n        assert total is 20\n        d.setValue(20)\n        assert total is 40\n        d.unwatchValue(watcher)\n        assert total is 40\n        d.setValue(50)\n        assert total is 40\n"]}