{"version":3,"sources":["ExpressionStatement.ion"],"names":["ion","Statement","ExpressionStatement","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true,"source":"ion/runtime/ExpressionStatement.ion"},"end":{"line":7,"column":16,"fixed":true,"source":"ion/runtime/ExpressionStatement.ion"}}},"runtimeExpression","context","createRuntime","expression","unobserve","observe","runtimeExpressionObserver","value","expressionValue","_remove","output","add","deactivate"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,EAEIC,SAAA,G,OAAY,CAAO,aAAP,CAFhB;IAIaC,mB;;QACTC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,oCADQD,Q,uBACI,CAAZ;AAAA,gBACY,KAACE,iBAAD,QAACA,iB,WAAD,KAACA,iB,GAAqB,KAACC,OAAD,CAASC,aAAT,CAAuB,KAACC,UAAxB,CAAtB,CADZ;AAAA,gBAEY,KAACC,SAAD,GAAa,KAACJ,iBAAD,CAAmBK,OAAnB,CACT,KAACC,yBAAD,QAACA,yB,WAAD,KAACA,yB,YAA6B,UAACC,KAAD,EAC9C;AAAA,oBAAoB,IAAG,KAACC,eAAD,KAAsBD,KAAzB,EACpB;AAAA,wBAAwB,KAACC,eAAD,GAAmBD,KAAnB,CAAxB;AAAA,wBACwB,KAACE,O,WAAD,KAACA,OAAD,E,SAAA,CADxB;AAAA,wBAEwB,KAACA,OAAD,GAAW,IAAX,CAFxB;AAAA,wBAGwB,IAAG,KAACR,OAAD,CAASS,M,QAAT,IAAqBH,KAAA,KAAW,MAAnC,EACxB;AAAA,4BAA4B,KAACE,OAAD,GAAWf,GAAA,CAAIiB,GAAJ,CAAQ,KAACV,OAAD,CAASS,MAAjB,EAAyBH,KAAzB,CAAX,CAA5B;AAAA,yBAJA;AAAA,qBADA;AAAA,iB,OAFyB,CAAb,CAFZ;AAAA,aAFe;AAAA,YAaPK,UAAA,EAAYb,YACpB;AAAA,gB,oCADQa,U,uBACI,CAAZ;AAAA,gBACY,KAACN,yB,WAAD,KAACA,yBAAD,CAA4B,MAA5B,C,SAAA,CADZ;AAAA,gBAEY,KAACF,SAAD,GAFZ;AAAA,gBAGY,KAACK,O,WAAD,KAACA,OAAD,E,SAAA,CAHZ;AAAA,gBAIY,KAACA,OAAD,GAAW,IAAX,CAJZ;AAAA,aAde;AAAA,S;OAD0Bd,S,EAJzC;2BAIaC,mB","sourcesContent":["const\n    ion = import '../'\n    Statement = import './Statement'\n\nexport class ExpressionStatement extends Statement\n    properties:\n        activate: ->\n            super\n            @runtimeExpression ?= @context.createRuntime(@expression)\n            @unobserve = @runtimeExpression.observe(\n                @runtimeExpressionObserver ?= (value) =>\n                    if @expressionValue isnt value\n                        @expressionValue = value\n                        @_remove?()\n                        @_remove = null\n                        if @context.output? and value isnt undefined\n                            @_remove = ion.add(@context.output, value)\n            )\n        deactivate: ->\n            super\n            @runtimeExpressionObserver?(undefined)\n            @unobserve()\n            @_remove?()\n            @_remove = null\n"]}