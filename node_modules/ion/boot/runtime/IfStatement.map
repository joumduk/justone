{"version":3,"sources":["IfStatement.ion"],"names":["ion","Statement","IfStatement","properties","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":7,"column":8,"fixed":true,"source":"ion/runtime/IfStatement.ion"},"end":{"line":7,"column":16,"fixed":true,"source":"ion/runtime/IfStatement.ion"}}},"testExpression","context","createRuntime","test","unobserve","observe","testExpressionObserver","value","alternateStatement","isActive","deactivate","consequentStatement","newContext","consequent","alternate"],"mappings":"aAAA;AAAA,IACIA,GAAA,G,OAAM,CAAO,KAAP,CADV,EAEIC,SAAA,G,OAAY,CAAO,aAAP,CAFhB;IAIaC,W;;QACTC,UAAA,EAAW;AAAA,YACPC,QAAA,EAAUC,YAClB;AAAA,gB,4BADQD,Q,uBACI,CAAZ;AAAA,gBACY,KAACE,cAAD,QAACA,c,WAAD,KAACA,c,GAAkB,KAACC,OAAD,CAASC,aAAT,CAAuB,KAACC,IAAxB,CAAnB,CADZ;AAAA,gBAEY,KAACC,SAAD,GAAa,KAACJ,cAAD,CAAgBK,OAAhB,CACT,KAACC,sBAAD,QAACA,sB,WAAD,KAACA,sB,YAA0B,UAACC,KAAD,EAC3C;AAAA,oBAAoB,IAAGA,KAAH,EACpB;AAAA,wBAAwB,IAAG,KAACC,kB,WAAD,KAACA,kBAAD,CAAqBC,Q,SAAxB,EACxB;AAAA,4BAA4B,KAACD,kBAAD,CAAoBE,UAApB,GAA5B;AAAA,4BAG4B,KAACF,kBAAD,GAAsB,IAAtB,CAH5B;AAAA,yBADA;AAAA,wBAKwB,KAACG,mBAAD,GAAuB,KAACV,OAAD,CAASW,UAAT,GAAsBV,aAAtB,CAAoC,KAACW,UAArC,CAAvB,CALxB;AAAA,wBAMwB,KAACF,mBAAD,CAAqBb,QAArB,GANxB;AAAA,qBADoB,MASpB;AAAA,wBAAwB,IAAG,KAACa,mB,WAAD,KAACA,mBAAD,CAAsBF,Q,SAAzB,EACxB;AAAA,4BAA4B,KAACE,mBAAD,CAAqBD,UAArB,GAA5B;AAAA,4BAC4B,KAACC,mBAAD,GAAuB,IAAvB,CAD5B;AAAA,yBADA;AAAA,wBAGwB,IAAG,KAACG,S,QAAJ,EACxB;AAAA,4BAA4B,KAACN,kBAAD,GAAsB,KAACP,OAAD,CAASW,UAAT,GAAsBV,aAAtB,CAAoC,KAACY,SAArC,CAAtB,CAA5B;AAAA,4BAC4B,KAACN,kBAAD,CAAoBV,QAApB,GAD5B;AAAA,yBAJA;AAAA,qBATA;AAAA,iB,OAFyB,CAAb,CAFZ;AAAA,aAFe;AAAA,YAsBPY,UAAA,EAAYX,YACpB;AAAA,gB,4BADQW,U,uBACI,CAAZ;AAAA,gBACY,KAACN,SAAD,GADZ;AAAA,gBAEY,IAAG,KAACI,kB,WAAD,KAACA,kBAAD,CAAqBC,Q,SAAxB,EACZ;AAAA,oBAAgB,KAACD,kB,WAAD,KAACA,kBAAD,CAAqBE,UAArB,E,SAAA,CAAhB;AAAA,oBACgB,KAACF,kBAAD,GAAsB,IAAtB,CADhB;AAAA,iBAHA;AAAA,gBAKY,IAAG,KAACG,mB,WAAD,KAACA,mBAAD,CAAsBF,Q,SAAzB,EACZ;AAAA,oBAAgB,KAACE,mB,WAAD,KAACA,mBAAD,CAAsBD,UAAtB,E,SAAA,CAAhB;AAAA,oBACgB,KAACC,mBAAD,GAAuB,IAAvB,CADhB;AAAA,iBANA;AAAA,aAvBe;AAAA,S;OADkBhB,S,EAJjC;2BAIaC,W","sourcesContent":["const\n    ion = import '../'\n    Statement = import './Statement'\n\nexport class IfStatement extends Statement\n    properties:\n        activate: ->\n            super\n            @testExpression ?= @context.createRuntime(@test)\n            @unobserve = @testExpression.observe(\n                @testExpressionObserver ?= (value) =>\n                    if value\n                        if @alternateStatement?.isActive\n                            @alternateStatement.deactivate()\n                            # we don't have to necessarily delete old statements\n                            # but behavior is more predictable this way\n                            @alternateStatement = null\n                        @consequentStatement = @context.newContext().createRuntime(@consequent)\n                        @consequentStatement.activate()\n                    else\n                        if @consequentStatement?.isActive\n                            @consequentStatement.deactivate()\n                            @consequentStatement = null\n                        if @alternate?\n                            @alternateStatement = @context.newContext().createRuntime(@alternate)\n                            @alternateStatement.activate()\n            )\n        deactivate: ->\n            super\n            @unobserve()\n            if @alternateStatement?.isActive\n                @alternateStatement?.deactivate()\n                @alternateStatement = null\n            if @consequentStatement?.isActive\n                @consequentStatement?.deactivate()\n                @consequentStatement = null\n"]}