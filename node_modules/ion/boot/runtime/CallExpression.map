{"version":3,"sources":["CallExpression.ion"],"names":["ion","DynamicExpression","ArrayExpression","Factory","CallExpression","properties","args","activate",{"type":"Identifier","name":"activate","loc":{"start":{"line":8,"column":8,"fixed":true,"source":"ion/runtime/CallExpression.ion"},"end":{"line":8,"column":16,"fixed":true,"source":"ion/runtime/CallExpression.ion"}}},"calleeExpression","context","createRuntime","callee","unobserveCallee","observe","calleeWatcher","value","isActive","existential","loc","start","source","console","warn","toCode","line","column","calleeValue","evaluate","unobserveCalleeObject","objectExpression","thisWatcher","thisArg","unobserveThis","template","deep","Array","isArray","patch","watch","thisObserver","priority","depth","argumentExpressions","type","elements","arguments","observeElements","unobserveArguments","argumentWatcher","argumentsValue","deactivate","unobserveTemplate","apply","templateWatcher","setValue","bind","create","e","error","module","exports"],"mappings":"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","sourcesContent":["const\n    ion = import '../'\n    {DynamicExpression,ArrayExpression,Factory} = import './'\n\nmodule.exports = class CallExpression extends DynamicExpression\n    properties:\n        args: null\n        activate: ->\n            super\n            @calleeExpression ?= @context.createRuntime(@callee)\n            @unobserveCallee = @calleeExpression.observe(\n                @calleeWatcher ?= (value) =>\n                    if @isActive and not value? and not @existential and @loc?.start.source?\n                        # we need to throw an exception here with location info\n                        console.warn(\"Function is {{value}} ({{Factory.toCode(@callee)}}) ({{@loc.start.source}}:{{@loc.start.line}}:{{@loc.start.column + 1}})\")\n                    @calleeValue = value\n                    @evaluate()\n            )\n            # get thisArg and observe for changes\n            @unobserveCalleeObject = @calleeExpression.objectExpression?.observe(\n                @thisWatcher ?= (thisArg) =>\n                    if thisArg isnt @thisArg\n                        @unobserveThis?()\n                        @unobserveThis = null\n                        @thisArg = thisArg\n                        if not @calleeValue?.template # we don't need to observe the thisArg if the callee is a template\n                            if @calleeExpression.objectExpression.deep or Array.isArray(thisArg)\n                                # console.log('deep observe man-------------------------', thisArg, @calleeValue)\n                                # deep observe\n                                @unobserveThis = ion.patch.watch(\n                                    thisArg\n                                    @thisObserver ?= (patch) =>\n                                        # console.log('deep change', patch)\n                                        @evaluate()\n                                )\n                            else\n                                # shallow observe\n                                @unobserveThis = ion.observe(\n                                    thisArg\n                                    @thisObserver ?= =>\n                                        @evaluate()\n                                    {priority:@context.depth}\n                                )\n                        @evaluate()\n            )\n            @argumentExpressions ?= @context.createRuntime({type:'ArrayExpression',elements:@arguments, observeElements:not @calleeValue?.template})\n            @unobserveArguments = @argumentExpressions.observe(\n                @argumentWatcher ?= (value) =>\n                    @argumentsValue = value\n                    @evaluate()\n            )\n        deactivate: ->\n            super\n            @unobserveCallee()\n            @unobserveArguments()\n            @unobserveCalleeObject?()\n            @unobserveThis?()\n            @unobserveTemplate?()\n        evaluate: ->\n            if not (@isActive and @calleeValue? and @argumentsValue? and (@thisArg? or not @calleeExpression.objectExpression?))\n                return\n            let value = undefined\n            @unobserveTemplate?()\n            @unobserveTemplate = null\n            try\n                if @calleeValue.template\n                    # always use new on templates\n                    @template = @calleeValue.apply(@thisArg, @argumentsValue)\n                    @unobserveTemplate = @template.observe(@templateWatcher ?= @setValue.bind(@))\n                else\n                    if @type is 'NewExpression'\n                        # create a new with variable args\n                        value = ion.create(@calleeValue, @argumentsValue)\n                    else # @type is 'CallExpression'\n                        value = @calleeValue.apply(@thisArg, @argumentsValue)\n                    @setValue(value)\n            catch e\n                let start = @loc.start\n                console.error(\"Call Error at {{start.source}} (line:{{start.line}},column:{{start.column}})\")\n                throw e\n"]}