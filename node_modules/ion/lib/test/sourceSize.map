{"version":3,"sources":["sourceSize.ion"],"names":["global","window","fs","np","total","files","printSize",{"type":"Identifier","name":"printSize","loc":{"start":{"line":9,"column":4,"fixed":true,"source":"ion/test/sourceSize.ion"},"end":{"line":9,"column":13,"fixed":true,"source":"ion/test/sourceSize.ion"}}},"fileOrDirectory","stats","statSync","isDirectory","readdirSync","file","join","match","content","readFileSync","size","split","line","chars","trim","comment","length","console","log","require","main","module","args","process","argv","slice","arg"],"mappings":"aAAA;AAAA,IAAGA,MAAA,CAAOC,MAAV,EACA;AAAA,IAAI,OAAJ;AAAA,CADA;AAGA,IAAIC,EAAA,G,OAAK,CAAO,IAAP,CAAT,CAHA;AAIA,IAAIC,EAAA,G,OAAK,CAAO,MAAP,CAAT,CAJA;AAMA,IAAIC,KAAA,GAAQ,CAAZ,CANA;AAOA,IAAIC,KAAA,GAAQ,CAAZ,CAPA;AAQA,IAAIC,SAAA,GAAYC,UAACC,eAADD,EAChB;AAAA,IAAI,IAAIE,KAAA,GAAQP,EAAA,CAAGQ,QAAH,CAAYF,eAAZ,CAAZ,CAAJ;AAAA,IACI,IAAGC,KAAA,CAAME,WAAN,EAAH,EACJ;AAAA,Q;uBAAoBT,EAAA,CAAGU,WAAH,CAAeJ,eAAf,C;qDACpB;AAAA,gB,IADYK,I,YACZ;AAAA,gBAAYP,SAAA,CAAUH,EAAA,CAAGW,IAAH,CAAQN,eAAR,EAAyBK,IAAzB,CAAV,EAAZ;AAAA,a;SADA;AAAA,KADI,MAKJ;AAAA,QAAQ,IAAGL,eAAA,CAAgBO,KAAhB,CAAsB,QAAtB,CAAH,EACR;AAAA,YAAY,OAAZ;AAAA,SADA;AAAA,QAEQ,IAAIC,OAAA,GAAUd,EAAA,CAAGe,YAAH,CAAgBT,eAAhB,EAAiC,MAAjC,CAAd,CAFR;AAAA,QAGQ,IAAIU,IAAA,GAAO,CAAX,CAHR;AAAA,Q;wBAIoBF,OAAA,CAAQG,KAAR,CAAc,UAAd,C;yDACpB;AAAA,gB,IADYC,I,cACZ;AAAA,gBAAY,IAAIC,KAAA,GAAQD,IAAA,CAAKE,IAAL,EAAZ,CAAZ;AAAA,gBACY,IAAIC,OAAA,GAAUF,KAAA,CAAMN,KAAN,CAAY,aAAZ,CAAd,CADZ;AAAA,gBAEY,IAAG,CAAIQ,OAAP,EACZ;AAAA,oBAAgBL,IAAA,IAAQG,KAAA,CAAMG,MAAd,CAAhB;AAAA,iBAHA;AAAA,a;SALA;AAAA,QASQpB,KAAA,IAASc,IAAT,CATR;AAAA,QAUQb,KAAA,GAVR;AAAA,QAWQoB,OAAA,CAAQC,GAAR,CAAYlB,eAAA,G,KAAA,GAA0BU,IAAtC,EAXR;AAAA,KANA;AAAA,CADA,CARA;AA4BA,IAAGS,OAAA,CAAQC,IAAR,KAAgBC,MAAnB,EACA;AAAA,IAAI,IAAIC,IAAA,GAAOC,OAAA,CAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAX,CAAJ;AAAA,I,wBACeH,I,gBACf;AAAA,Q,IADQI,G,GAAOJ,I,MACf;AAAA,QAAQxB,SAAA,CAAU4B,GAAV,EAAR;AAAA,KAFA;AAAA,IAGIT,OAAA,CAAQC,GAAR,CAAY,yCAAZ,EAHJ;AAAA,IAIID,OAAA,CAAQC,GAAR,CAAY,mBAAmBrB,KAA/B,EAJJ;AAAA,IAKIoB,OAAA,CAAQC,GAAR,CAAY,mBAAmBtB,KAA/B,EALJ;AAAA","sourcesContent":["if global.window\n    return\n\nlet fs = import 'fs'\nlet np = import 'path'\n\nlet total = 0\nlet files = 0\nlet printSize = (fileOrDirectory) ->\n    let stats = fs.statSync(fileOrDirectory)\n    if stats.isDirectory()\n        for file in fs.readdirSync(fileOrDirectory)\n            printSize(np.join(fileOrDirectory, file))\n    else\n        # ignore css\n        if fileOrDirectory.match(/\\.css$/)\n            return\n        let content = fs.readFileSync(fileOrDirectory, 'utf8')\n        let size = 0\n        for line in content.split(/[\\r\\n]+/g)\n            let chars = line.trim()\n            let comment = chars.match(/^(#|(\\/\\/))/)\n            if not comment\n                size += chars.length\n        total += size\n        files++\n        console.log(fileOrDirectory + \" : \" + size)\n\nif require.main is module\n    let args = process.argv.slice(2)\n    for arg in args\n        printSize(arg)\n    console.log('---------------------------------------')\n    console.log('Total Files : ' + files)\n    console.log('Total Bytes : ' + total)\n"]}