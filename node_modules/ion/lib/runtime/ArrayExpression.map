{"version":3,"sources":["ArrayExpression.ion"],"names":["ion","DynamicExpression","ArrayExpression","constructor","elements","Error","context","properties","observeElements","notifyIfActive",{"type":"Identifier","name":"notifyIfActive","loc":{"start":{"line":14,"column":8,"fixed":true,"source":"ion/runtime/ArrayExpression.ion"},"end":{"line":14,"column":22,"fixed":true,"source":"ion/runtime/ArrayExpression.ion"}}},"isActive","notify","setArgumentValue","key","expression","value","argumentValues","unobserveExpressionValues","itemObserver","priority","depth","deep","patch","watch","observe","activate","item","createRuntime","expressions","unobserveExpressions","push","bind","setValue","deactivate","unobserve","test","Context","e","type","result","watcher","JSON","stringify"],"mappings":"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","sourcesContent":["const\n    ion = import '../'\n    DynamicExpression = import './DynamicExpression'\n\nexport class ArrayExpression extends DynamicExpression\n    constructor: ->\n        super\n        if not @elements?\n            throw new Error(\"elements is required\")\n        if not @context?\n            throw new Error(\"context is required\")\n    properties:\n        observeElements: false\n        notifyIfActive: ->\n            if @isActive\n                @notify()\n        setArgumentValue: (key, expression, value) ->\n            if @argumentValues[key] isnt value\n                @unobserveExpressionValues[key]?()\n                @argumentValues[key] = value\n                if @observeElements\n                    if value?\n                        @itemObserver ?= =>\n                            @notifyIfActive()\n                        let priority = @context.depth\n                        @unobserveExpressionValues[key] = expression.deep ? ion.patch.watch(value, @itemObserver) : ion.observe(value, @itemObserver, {priority})\n                @notifyIfActive()\n        activate: ->\n            @expressions = [@context.createRuntime(item) for item in @elements]\n            @argumentValues = []\n            @unobserveExpressionValues = []\n            @unobserveExpressions = []\n            for expression, key in @expressions\n                @unobserveExpressions.push(expression.observe(@setArgumentValue.bind(@, key, expression)))\n            super\n            @setValue(@argumentValues)\n        deactivate: ->\n            for expression, key in @expressions\n                @unobserveExpressionValues[key]?()\n            for unobserve in @unobserveExpressions\n                unobserve()\n            super\n    test: ->\n        const Context = import './Context'\n        let e = new ArrayExpression(\n            context: new Context()\n            elements: []\n                {type:'Literal', value: 1}\n                {type:'Literal', value: 2}\n        )\n        let result = undefined\n        const watcher(value) ->\n            result = value\n        let unobserve = e.observe(watcher)\n        assert JSON.stringify(result) is \"[1,2]\"\n        unobserve()\n"]}